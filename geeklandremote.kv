#:kivy 1.0.9
#:import gmtime time.gmtime
#:import strftime time.strftime
#:import Light phue.Light


# --------------------------------------
# video panel
# --------------------------------------

<Spacer@Widget>:
	disabled: True

<VideoButton@Button>:
	font_size: '50sp'
	background_color: (0.5, 0.5, 0.5, 0.5)

<VideoPanel>:
	padding: 5
	spacing: 5

	BoxLayout:
		orientation: 'vertical'
		GridLayout:
			cols:3
			spacing: 5
			Spacer:
			VideoButton:
				text: '^'
				on_press: root.kodiRemote('Input.Up')
			Spacer:
			VideoButton:
				text: '<'
				on_press: root.kodiRemote('Input.Left')
			VideoButton:
				text: 'ok'
				on_press: root.kodiRemote('Input.Select')
			VideoButton:
				text: '>'
				on_press: root.kodiRemote('Input.Right')
			Spacer:
			VideoButton:
				text: 'v'
				on_press: root.kodiRemote('Input.Down')

		Slider: # TODO
			size_hint_y: 0.1

		BoxLayout:
			size_hint_y: 0.1
			spacing: 5
			Button:
				text: 'l<'
				on_press: root.kodiRemote('Player.Goto', {'playerid': 1, 'to': 'previous'})
			Button:
				text: '<<'
				on_press: root.kodiRemote('Player.SetSpeed', {'playerid': 1, 'speed': 'decrement'})
			Button:
				text: 'play'
				on_press: root.kodiRemote('Player.PlayPause', {'playerid': 1})
			Button:
				text: 'stop'
				on_press: root.kodiRemote('Player.Stop', {'playerid': 1})
			Button:
				text: '>>'
				on_press: root.kodiRemote('Player.SetSpeed', {'playerid': 1, 'speed': 'increment'})
			Button:
				text: '>l'
				on_press: root.kodiRemote('Player.Goto', {'playerid': 1, 'to': 'next'})

	BoxLayout:
		spacing: 5
		size_hint_x: 0.4
		orientation: 'vertical'
		Button:
			text: 'home'
			on_press: root.kodiRemote('Input.Home')
		Button:
			text: 'back'
			on_press: root.kodiRemote('Input.Back')
		Button:
			text: 'osd'
			on_press: root.kodiRemote('Input.ShowOSD')
		Button:
			text: 'info'
			on_press: root.kodiRemote('Input.Info')
		Button:
			text: 'mute'
			on_press: root.kodiRemote('Application.SetMute', {'mute': 'toggle'})
		Button:
			text: 'volume +'
			on_press: root.kodiRemote('Application.SetVolume', {'volume': 'increment'})
		Button:
			text: 'volume -'
			on_press: root.kodiRemote('Application.SetVolume', {'volume': 'decrement'})
		Button: # TODO not working
			text: 'ratio'
			on_press: root.kodiRemote('Application.SendText', {'string': 'z'})
		Button: # TODO
			text: 'sous-titres'

# --------------------------------------
# light panel
# --------------------------------------

<LightSwitch>:
	size_hint_y: 0.2
	Label:
		size_hint_x: 0.4
		text: root.light.name
	Switch:
		id: is_on
		size_hint_x: 0.4
		active: root.light.on
		on_active: root.light.on = self.active
	Slider:
		max: 254
		step: 16
		disabled: not(is_on.active)
		value: root.light.brightness
		on_value: root.light.brightness = int(self.value)
	CheckBox:
		id: is_colorable
		size_hint_x: 0.1


<LightPanel>:
	padding: 5
	orientation: 'vertical'

	BoxLayout:
		spacing: 5
		BoxLayout:
			ColorPicker:
				id: color_picker
				on_color: root.set_color()
				color: (0,0,0,0)

		BoxLayout:
			size_hint_x: 0.2
			orientation: 'vertical'
			spacing: 5
			Spacer:
			Button:
				text: 'party'
				on_press: root.party()
			Button:
				text: 'all on'
				on_press: root.all_on(True)
			Button:
				text: 'all off'
				on_press: root.all_on(False)
			Spacer:


# --------------------------------------
# main panel TODO
# --------------------------------------

<GeeklandRemote>:
	canvas.before:
		Color:
			rgb: .6, .6, .6
		Rectangle:
			size: self.size
			source: 'images/background.png'

	Accordion:
		AccordionItem:
			title: 'Main'
			Label:
				text: strftime("%a, %d %b %Y %H:%M:%S +0000", gmtime())
		AccordionItem:
			title: 'Meteo'
			Label:
				text: 'trop beau'
		AccordionItem:
			title: 'Kodi'
			VideoPanel:
		AccordionItem:
			title: 'Hue'
			LightPanel:
